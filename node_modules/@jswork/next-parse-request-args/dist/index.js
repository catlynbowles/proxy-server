/*!
 * name: @jswork/next-parse-request-args
 * description: Request arguments parser.
 * homepage: https://js.work
 * version: 1.0.6
 * date: 2023-04-20 22:43:31
 * license: MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = void 0;
var _next = _interopRequireDefault(require('@jswork/next'));
var _excluded = ['method', 'url', 'data'];
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
var DEFAULT_OPTIONS = {
  method: 'get'
};
var MSG_ERROR = 'The arguments.length should between 1 ~ 4.';
var HTTP_METHOD = ['GET', 'POST', 'DELETE', 'PUT', 'CONNECT', 'HEAD', 'OPTIONS', 'TRACE'];
var isValidMethod = function isValidMethod(arg) {
  return HTTP_METHOD.includes(arg.toUpperCase());
};
_next['default'].parseRequestArgs = function (inArguments, inIsArray) {
  var args = _next['default'].slice(inArguments);
  var length = args.length;
  var options = null;

  // input:
  // 1. (config)
  // 2. (url)
  // 3. (url, config)
  // 4. (method, config)
  // 5. (method, url)
  // 6. (method, url, config)
  // 7. (method, url, undefined, data) --- 这种其实是第6种情况，但 config 实际是 data 得到的
  // 8. (method, url, data, config)

  switch (length) {
    case 1:
      options =
        typeof args[0] === 'string'
          ? {
              url: args[0]
            }
          : args[0];
      break;
    case 2:
      var config =
        typeof args[1] === 'string'
          ? {
              url: args[1]
            }
          : args[1];
      options = isValidMethod(args[0])
        ? _next['default'].mix(
            {
              method: args[0]
            },
            config
          )
        : _next['default'].mix(
            {
              url: args[0]
            },
            args[1]
          );
      break;
    case 3:
      options = _next['default'].mix(
        {
          method: args[0],
          url: args[1]
        },
        args[2]
      );
      break;
    case 4:
      if (args[2] === undefined) (args[2] = args[3]), delete args[3];
      options = _next['default'].mix(
        {
          method: args[0],
          url: args[1],
          data: args[2]
        },
        args[3]
      );
      break;
    default:
      options = null;
      _next['default'].error(MSG_ERROR);
  }
  options = _next['default'].mix(null, DEFAULT_OPTIONS, options);
  var _options = options,
    method = _options.method,
    url = _options.url,
    data = _options.data,
    opts = _objectWithoutProperties(_options, _excluded);
  return !inIsArray ? options : [method, url, data, opts];
};
if (typeof module !== 'undefined' && module.exports) {
  module.exports = _next['default'].parseRequestArgs;
}
var _default = _next['default'].parseRequestArgs;
exports['default'] = _default;
