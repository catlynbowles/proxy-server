import T from"@jswork/next";import"@jswork/next-apply-fetch-middleware";import"@jswork/fetch";var b={debug:!1},l=o=>(e,s)=>{let{debug:n,...t}={...b,...s};if(!n)return o(e,t);let r={url:e,...t};return console.log(`
 :::::::::DEBUG::::::::: 
`),console.log(r),o(e,t)};var y={destroyable:!1},a=o=>(e,s)=>{let{destroyable:n,...t}={...y,...s};if(!n)return o(e,t);let r=new AbortController,i=r.signal,d=o(e,{signal:i,...t});return d.destroy=()=>{r.abort()},d};var w={responseType:"json",slim:!1},m=o=>(e,s)=>{let{responseType:n,...t}={...w,...s};return n?o(e,t).then(r=>{let{ok:i,status:d}=r;return r[i?n:"text"]().then(c=>({status:d,data:c,original:r}))}):o(e,t)};var x={timeout:0},p=o=>(e,s)=>{let{timeout:n,...t}={...x,...s};if(n<=0)return o(e,t);let r=new AbortController,{signal:i}=r,d=setTimeout(()=>{r.abort()},n);return o(e,{signal:i,...t}).then(u=>(clearTimeout(d),u)).catch(u=>{throw u.name==="AbortError"?new Error("Timeout"):u})};var h={timeout:0,debug:!1,destroyable:!1,responseType:"json"},f=(o,e)=>{let s={...h,...e};return T.applyFetchMiddleware([l,a,m,p])(fetch)(o,s)};typeof module<"u"&&module.exports&&(module.exports=f);var B=f;export{B as default};
//# sourceMappingURL=index.js.map
