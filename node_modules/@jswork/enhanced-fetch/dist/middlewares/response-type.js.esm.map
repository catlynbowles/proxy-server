{
  "version": 3,
  "sources": ["../src/middlewares/response-type.ts"],
  "sourcesContent": ["import { MiddleWareFunction } from '../types';\n\nconst defaults = { responseType: 'json', slim: false };\n\nexport const middlewareResponseType: MiddleWareFunction = (inFetch) => (inUrl, inInit?) => {\n  const { responseType, ...options } = { ...defaults, ...inInit };\n  if (!responseType) return inFetch(inUrl, options);\n  return inFetch(inUrl, options).then((original) => {\n    const { ok, status } = original;\n    const resType = ok ? responseType : 'text';\n    return original[resType]().then((data) => {\n      return { status, data, original };\n    });\n  });\n};\n"],
  "mappings": "AAEA,IAAMA,EAAW,CAAE,aAAc,OAAQ,KAAM,EAAM,EAExCC,EAA8CC,GAAY,CAACC,EAAOC,IAAY,CACzF,GAAM,CAAE,aAAAC,EAAc,GAAGC,CAAQ,EAAI,CAAE,GAAGN,EAAU,GAAGI,CAAO,EAC9D,OAAKC,EACEH,EAAQC,EAAOG,CAAO,EAAE,KAAMC,GAAa,CAChD,GAAM,CAAE,GAAAC,EAAI,OAAAC,CAAO,EAAIF,EAEvB,OAAOA,EADSC,EAAKH,EAAe,MACb,EAAE,EAAE,KAAMK,IACxB,CAAE,OAAAD,EAAQ,KAAAC,EAAM,SAAAH,CAAS,EACjC,CACH,CAAC,EAPyBL,EAAQC,EAAOG,CAAO,CAQlD",
  "names": ["defaults", "middlewareResponseType", "inFetch", "inUrl", "inInit", "responseType", "options", "original", "ok", "status", "data"]
}
