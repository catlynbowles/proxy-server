/*!
 * name: @jswork/next-data-transform
 * description: Data transform for next.
 * homepage: https://js.work
 * version: 1.0.15
 * date: 2023-04-20 22:42:46
 * license: MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = void 0;
var _next = _interopRequireDefault(require('@jswork/next'));
require('@jswork/next-param');
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}
function _typeof(obj) {
  '@babel/helpers - typeof';
  return (
    (_typeof =
      'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
        ? function (obj) {
            return typeof obj;
          }
        : function (obj) {
            return obj &&
              'function' == typeof Symbol &&
              obj.constructor === Symbol &&
              obj !== Symbol.prototype
              ? 'symbol'
              : typeof obj;
          }),
    _typeof(obj)
  );
}
var NxDataTransform = _next['default'].declare('nx.DataTransform', {
  statics: {
    raw: _next['default'].stubValue,
    __json__: function __json__(inData) {
      return JSON.stringify(inData);
    },
    __urlencoded__: function __urlencoded__(inData) {
      return _next['default'].param(inData);
    },
    __multipart__: function __multipart__(inData) {
      if (inData instanceof FormData) return inData;
      var fd = new FormData();
      _next['default'].forIn(inData, function (key, value) {
        fd.append(key, value);
      });
      return data;
    },
    'json,urlencoded,multipart': function jsonUrlencodedMultipart(inName) {
      return function (inData) {
        if (!inData || _typeof(inData) !== 'object') return inData;
        return this['__' + inName + '__'].call(this, inData);
      };
    },
    transform: function transform(inDataType, inData) {
      var fn = this[inDataType];
      return fn ? fn.call(this, inData) : inData;
    }
  }
});
if (typeof module !== 'undefined' && module.exports) {
  module.exports = NxDataTransform;
}
var _default = NxDataTransform;
exports['default'] = _default;
